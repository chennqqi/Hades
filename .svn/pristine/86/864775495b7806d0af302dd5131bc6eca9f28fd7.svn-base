package com.aotain.common;

import java.io.File;
import java.util.ArrayList;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;

import org.w3c.dom.Document;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;




/**
 * HFile生成配置
 * @author Administrator
 *
 */
public class HFileConfigMgr {
	
	/**
	 * 配置文件路径
	 */
	//private static final String configFilePath = System.getProperty("user.dir") + File.separator + "conf" + 
	//    	File.separator ;
	
	public HfileConfig config = new HfileConfig();
	
	public HFileConfigMgr(String XMLFile)
			throws Exception
	{
		init(XMLFile);
	}
	
	private void init(String XMLFile)
			throws Exception
	{
		File f = new File(XMLFile);
		if ((!f.exists()) || (!f.isFile())) {
			System.out.println("XML is not exists");
			System.out.println(XMLFile);
			return;
		}
		
		DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
		DocumentBuilder builder = factory.newDocumentBuilder();
		Document doc = null;

		doc = builder.parse(f);

		NodeList pn = doc.getElementsByTagName("HFILE");
		if (pn.getLength() >= 1)
		{
			if ((doc.getElementsByTagName("KVSPLIT") != null) && 
					(doc.getElementsByTagName("KVSPLIT").item(0) != null) && 
					(doc.getElementsByTagName("KVSPLIT").item(0).getFirstChild() != null))
			{
				config.setKVSplit(doc.getElementsByTagName("KVSPLIT").item(0).getFirstChild().getNodeValue());
			}
			
			if ((doc.getElementsByTagName("FIELDSPLIT") != null) && 
					(doc.getElementsByTagName("FIELDSPLIT").item(0) != null) && 
					(doc.getElementsByTagName("FIELDSPLIT").item(0).getFirstChild() != null))
			{
				config.setFieldSplit(doc.getElementsByTagName("FIELDSPLIT").item(0).getFirstChild().getNodeValue());
			}
			
			if ((doc.getElementsByTagName("DTFIELD") != null) && 
					(doc.getElementsByTagName("DTFIELD").item(0) != null) && 
					(doc.getElementsByTagName("DTFIELD").item(0).getFirstChild() != null))
			{
				config.setDtField(doc.getElementsByTagName("DTFIELD").item(0).getFirstChild().getNodeValue());
			}
			
			if ((doc.getElementsByTagName("DTFORMAT") != null) && 
					(doc.getElementsByTagName("DTFORMAT").item(0) != null) && 
					(doc.getElementsByTagName("DTFORMAT").item(0).getFirstChild() != null))
			{
				config.setDtFormat(doc.getElementsByTagName("DTFORMAT").item(0).getFirstChild().getNodeValue());
			}
			
			if ((doc.getElementsByTagName("INPUT") != null) && 
					(doc.getElementsByTagName("INPUT").item(0) != null) && 
					(doc.getElementsByTagName("INPUT").item(0).getFirstChild() != null))
			{
				config.setInput(doc.getElementsByTagName("INPUT").item(0).getFirstChild().getNodeValue());
			}
			
			if ((doc.getElementsByTagName("OUTPUT") != null) && 
					(doc.getElementsByTagName("OUTPUT").item(0) != null) && 
					(doc.getElementsByTagName("OUTPUT").item(0).getFirstChild() != null))
			{
				config.setOutput(doc.getElementsByTagName("OUTPUT").item(0).getFirstChild().getNodeValue());
			}
			
			if ((doc.getElementsByTagName("TABLENAME") != null) && 
					(doc.getElementsByTagName("TABLENAME").item(0) != null) && 
					(doc.getElementsByTagName("TABLENAME").item(0).getFirstChild() != null))
			{
				config.setTableName(doc.getElementsByTagName("TABLENAME").item(0).getFirstChild().getNodeValue());
			}
		}
		
		ArrayList<FieldItem> columns = new ArrayList<FieldItem>();
		if ((doc.getElementsByTagName("COLUMNS").item(0) != null) && 
				(doc.getElementsByTagName("COLUMNS").item(0).getFirstChild() != null))
		{
			Node fieldnode = doc.getElementsByTagName("COLUMNS").item(0);
			parseFieldInfo(columns, fieldnode);
		}
		config.setColumns(columns);
		
		ArrayList<FieldItem> rowkey = new ArrayList<FieldItem>();
		if ((doc.getElementsByTagName("ROWKEY").item(0) != null) && 
				(doc.getElementsByTagName("ROWKEY").item(0).getFirstChild() != null))
		{
			Node fieldnode = doc.getElementsByTagName("ROWKEY").item(0);
			parseFieldInfo(rowkey, fieldnode);
		}
		config.setRowKey(rowkey);
		
		ArrayList<FieldItem> filter = new ArrayList<FieldItem>();
		if ((doc.getElementsByTagName("FILTER").item(0) != null) && 
				(doc.getElementsByTagName("FILTER").item(0).getFirstChild() != null))
		{
			Node fieldnode = doc.getElementsByTagName("FILTER").item(0);
			parseFieldInfo(filter, fieldnode);
		}
		config.setFilter(filter);
	}
	
	private void parseFieldInfo(ArrayList<FieldItem> columns, Node currentNode)
  	{
		NodeList Ssn = currentNode.getChildNodes();

  		for (int nIndex = 0; nIndex < Ssn.getLength(); nIndex++)
  		{
  			Node tempnode = Ssn.item(nIndex);

  			if ((tempnode.getNodeType() != 1) || 
  					(!tempnode.getNodeName().toUpperCase().equals("FIELDITEM")))
  				continue;
  			NodeList childnodeList = tempnode.getChildNodes();
  			if (childnodeList == null)
  				continue;
  			FieldItem field = new FieldItem();
  			for (int i = 0; i < childnodeList.getLength(); i++)
  			{
  				Node childnode = childnodeList.item(i);
  				if (childnode.getNodeType() != 1)
  					continue;
  				String NodeName = childnode.getNodeName().toUpperCase();
  				String strValue = getNodeValue(childnode);
  				if (NodeName.equals("FIELDINDEX"))
  				{
  					if ((strValue == null) || (strValue.equals("")))
  						field.FieldIndex = 0;
  					else {
  						field.FieldIndex = Integer.parseInt(strValue);
  					}
  				}
  				if (NodeName.equals("COLUMNINDEX"))
  				{
  					if ((strValue == null) || (strValue.equals("")))
  						field.ColumnIndex = -1;
  					else {
  						field.ColumnIndex = Integer.parseInt(strValue);
  					}
  				}
  				else if (NodeName.equals("FIELDNAME"))
  				{
  					field.FieldName = strValue;
  				}
  				else if (NodeName.equals("REGEXP"))
  				{
  					field.RegExp = strValue;
  				}
  				else if (NodeName.equals("DATALENGTH"))
  				{
  					if(strValue == null || strValue.equals(""))
  						field.DataLength = 0;
  					else
  						field.DataLength = Integer.parseInt(strValue);
  				}
  				else if (NodeName.equals("COLUMNKEY"))
  				{
  					if ((strValue == null) || (strValue.equals("")))
  						field.iscolumnkey = 0;
  					else {
  						field.iscolumnkey = Integer.parseInt(strValue);
  					}
  				}
  				else if (NodeName.equals("OUTPUT"))
  				{
  					if ((strValue == null) || (strValue.equals("")))
  						field.isoutput = 1;
  					else {
  						field.isoutput = Integer.parseInt(strValue);
  					}
  				}
  			}
  			columns.add(field);
  		}
  	}
		
	private String getNodeValue(Node CurrentNode)
		{
			String strValue = "";
			NodeList nodelist = CurrentNode.getChildNodes();
			if (nodelist != null)
			{
				for (int i = 0; i < nodelist.getLength(); i++)
				{
					Node tempnode = nodelist.item(i);
					if (tempnode.getNodeType() != 3)
						continue;
					strValue = tempnode.getNodeValue();
				}
			}
			return strValue;
		}
	
	public class FieldItem
	{
		public FieldItem()
		{
			
		}
		public String FieldName = "";
		public int FieldIndex = -1;
		public int DataLength = 0;
		public String RegExp = "";
		public int iscolumnkey = 0;
		public int isoutput = 1;
		/**
		 * 用于Rowkey 在columns中搜索的index
		 */
		public int ColumnIndex = -1;
	}
}
