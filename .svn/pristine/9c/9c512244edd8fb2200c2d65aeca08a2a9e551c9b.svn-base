package com.aotain.project.gdtelecom.identifier;

import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.hadoop.hive.ql.io.orc.OrcStruct;
import org.apache.hadoop.hive.serde2.objectinspector.StructObjectInspector;
import org.apache.hadoop.hive.serde2.typeinfo.TypeInfo;
import org.apache.hadoop.hive.serde2.typeinfo.TypeInfoUtils;
import org.apache.hadoop.io.NullWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Mapper;

public class IdentifierGMapper extends IdentifierMapper<NullWritable, OrcStruct> {

	private static final String inputSchema = "struct<url:string,useragent:string,destinationip:string,destinationport:string,sourceport:string,"
			+ "link_info:string,cookie:string,contenttype:string,sca_catalog_type_id:string,sca_catalog_id:string,sca_classify_id:string,sca_site_id:string,"
			+ "sca_site_category_id:string,sca_ntlds:string,sca_domainname:string,sca_search_keywords:string,sca_web_keywords:string,"
			+ "sca_content_keywords:string,sca_title:string,sca_app_id:string,sca_app_name:string,sca_action_id:string,sca_action_name:string,"
			+ "sca_source_id:string,sca_source_name:string,sca_refer_id:string,sca_refer_name:string,account_nbr:string,protocol_type:string,"
			+ "sourceip:string,domain:string,visit_time:string,pack_len:string,pack_content:string,is_ip:int>";

	private StructObjectInspector inputOI;

	@Override
	protected void setup(Mapper<NullWritable, OrcStruct, Text, Text>.Context context)
			throws IOException, InterruptedException {
		super.setup(context);
		TypeInfo tfin = TypeInfoUtils.getTypeInfoFromTypeString(inputSchema);
		inputOI = (StructObjectInspector) OrcStruct.createObjectInspector(tfin);
	}

	@Override
	protected void map(NullWritable key, OrcStruct value, Mapper<NullWritable, OrcStruct, Text, Text>.Context context)
			throws IOException, InterruptedException {
		try {
			List<Object> ilst = inputOI.getStructFieldsDataAsList(value);
			if (ilst.size() < 28) {
				return;
			}

			sUserName = getCol(ilst, 27);
			if (sUserName == null || validateUser(sUserName)) {
				return;
			}

			url = getCol(ilst, 0);
			cookie = getCol(ilst, 6);
			pack_contnt= getCol(ilst, 33);
			domain = getCol(ilst, 30);
			timestamp = getCol(ilst, 31);
			ua = getCol(ilst, 1);

			supermap(key, value, context);
		} catch (Exception e) {
			;
		}

	}

}
